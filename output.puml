@startuml
skinparam classAttributeIconSize 0
class OnlineApplication{
- onlineApplicationId : Long
- applicationJson : byte[]
- applicationStatusId : Long
- applicationTypeId : Long
- downloadError : String
- downloadDate : java.time.LocalDateTime
- userAgent : String
- applicantIpAddress : String
- applicantCyloginUniqueIdentifier : String
- applicationNumber : Long
- application : cy.gov.mlsi.sis.benefits.model.application.Application
+ setApplicationStatusId(status : long) : void
+ setApplicationStatusId(status : cy.gov.mlsi.sis.benefits.model.application.enums.EnumApplicationStatus) : void
+ getApplicationStatus() : cy.gov.mlsi.sis.benefits.model.application.enums.EnumApplicationStatus
+ setApplicationTypeId(status : long) : void
+ setApplicationTypeId(status : cy.gov.mlsi.sis.benefits.model.application.enums.EnumApplicationType) : void
+ getApplicationType() : cy.gov.mlsi.sis.benefits.model.application.enums.EnumApplicationType
+ isDraft() : boolean
+ getApplication() : cy.gov.mlsi.sis.benefits.model.application.Application
}
OnlineApplication --|> AuditableEntity
class ApplicationNumber{
- value : long
+ {static} of(value : long) : ApplicationNumber
+ {static} of(value : String) : ApplicationNumber
}
class Application{
- applicant : ApplicationIndividual
- applicationType : EnumApplicationType
- applicationStatus : EnumApplicationStatus
- applicationNumber : ApplicationNumber
- finalSubmitDate : LocalDate
- userAgent : String
- remoteIp : String
- acceptedTerms : Boolean
- uploadedFiles : List<cy.gov.mlsi.sis.shared.model.impl.UploadedFile>
- applicationDetails : IApplicationDetails
+ getApplicantIndividualId() : Long
}
Application ..|> IApplication
class MaternityDetails{
- expectedDeliveryDate : ExpectedDeliveryDate
}
MaternityDetails ..|> IApplicationDetails
class ApplicationSerializationTest{
- objectMapper : ObjectMapper
setUp() : void
testBirthgrantApplicationSerialization() : void
testMaternityApplicationSerialization() : void
testDeserializationWithUnknownType() : void
+ {static} getTestApplication(applicationNumber : ApplicationNumber, type : EnumApplicationType) : Application
}
class ApplicationStatusValidator{
- onlineApplicationRepository : OnlineApplicationRepository
+ isValid(onlineApplication : OnlineApplication, context : ConstraintValidatorContext) : boolean
- getOriginalApplication(applicationId : Long) : OnlineApplication
}
ApplicationStatusValidator ..|> ConstraintValidator
class ApplicationFactory{
+ createNew(applicationType : EnumApplicationType) : Application
+ createDetails(applicationType : EnumApplicationType) : IApplicationDetails
}
ApplicationFactory ..|> IApplicationFactory
class ApplicationIndividual{
- otherCountryContributions : List<OtherCountryContribution>
}
ApplicationIndividual --|> Individual
class PaternityDetails{
}
PaternityDetails ..|> IApplicationDetails
class OtherCountryContribution{
- insurancePeriodFrom : LocalDate
- insurancePeriodTo : LocalDate
- foreignCountrySiNumber : Long
- country : Country
}
class BirthgrantDetails{
- marriageDate : LocalDate
- children : List<Individual>
- spouse : ApplicationIndividual
}
BirthgrantDetails ..|> IApplicationDetails
class ExpectedDeliveryDate{
- value : LocalDate
+ {static} of(value : LocalDate) : ExpectedDeliveryDate
}
Application--"- applicant" ApplicationIndividual
Application--"- applicationType" EnumApplicationType
Application--"- applicationStatus" EnumApplicationStatus
Application--"- applicationNumber" ApplicationNumber
Application--"- applicationDetails" IApplicationDetails
MaternityDetails--"- expectedDeliveryDate" ExpectedDeliveryDate
ApplicationStatusValidator--"- onlineApplicationRepository" OnlineApplicationRepository
BirthgrantDetails--"- spouse" ApplicationIndividual
interface IApplication{
getApplicant() : ApplicationIndividual
setApplicant(individual : ApplicationIndividual) : void
getApplicationType() : EnumApplicationType
setApplicationType(applicationType : EnumApplicationType) : void
getApplicationStatus() : EnumApplicationStatus
setApplicationStatus(applicationStatusId : EnumApplicationStatus) : void
getApplicationNumber() : ApplicationNumber
setApplicationNumber(applicationNumber : ApplicationNumber) : void
setUserAgent(userAgent : String) : void
getUserAgent() : String
setRemoteIp(remoteIp : String) : void
getRemoteIp() : String
getFinalSubmitDate() : LocalDate
setFinalSubmitDate(submitDate : LocalDate) : void
setAcceptedTerms(acceptedTerms : Boolean) : void
getAcceptedTerms() : Boolean
getUploadedFiles() : List<UploadedFile>
setUploadedFiles(uploadedFiles : List<UploadedFile>) : void
setApplicationDetails(applicationDetails : IApplicationDetails) : void
getApplicationDetails() : IApplicationDetails
}
interface OnlineApplicationRepository{
findUnfinishedByIndividualIdAndType(applicantCyloginUniqueIdentifier : String, applicationTypeId : Long) : Optional<OnlineApplication>
findTempByIndividualAndApplicationNumberAndType(applicantCyloginUniqueIdentifier : String, applicationNumber : long, applicationTypeId : long) : Optional<OnlineApplication>
deleteByapplicantCyloginUniqueIdentifier(applicantCyloginUniqueIdentifier : String) : void
}
OnlineApplicationRepository --|> JpaRepository
interface IApplicationDetails{
}
interface IApplicationFactory{
createNew(applicationType : EnumApplicationType) : Application
createDetails(applicationType : EnumApplicationType) : IApplicationDetails
}
enum EnumApplicationStatus{
USER_CREATED
TEMPORARY_SAVE
PENDING_FROM_DYA
NOT_ELIGIBLE_CANDIDATE_FROM_DYA
SUBMITTED
UPDATED_APPLICATION
APPLICATION_CANCELATION
DOWNLOADED
DOWNLOAD_CANCELED
TRANSFERRED_WITH_ERROR
UNDER_EXAMINATION
PROCESSED
FREEZE
}
enum EnumApplicationType{
SICK_BENEFIT
UNEMPLOYMENT
WIDOWHOOD
MATERNITY
PENSION
UPDATE_PERIOD
BIRTHGRANT
PATERNITY
}
@enduml